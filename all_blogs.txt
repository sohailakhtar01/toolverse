import Link from 'next/link'
import Image from 'next/image'
import { getAllPosts, urlFor } from '../../lib/sanity' // Make sure to export urlFor

// SEO: Generate dynamic metadata for the page
export async function generateMetadata() {
  const posts = await getAllPosts();
  const pageTitle = 'From the Blog | Strategies for Productivity & Growth';
  const pageDescription = 'Explore our latest articles on email productivity, deliverability, and strategies to help you and your team succeed.';

  // SEO: Generate structured data for rich results
  const jsonLd = {
    '@context': 'https://schema.org',
    '@type': 'Blog',
    'name': pageTitle,
    'description': pageDescription,
    'itemListElement': posts.map((post, index) => ({
      '@type': 'ListItem',
      'position': index + 1,
      'item': {
        '@type': 'BlogPosting',
        '@id': `https://www.yourwebsite.com/blog/${post.slug.current}`, // IMPORTANT: Change this URL
        'headline': post.title,
        'datePublished': post.publishedAt,
        'image': urlFor(post.mainImage).width(1200).height(630).url(), // Social share image size
        'author': {
          '@type': 'Person',
          'name': post.author.name
        }
      }
    }))
  };

  return {
    title: pageTitle,
    description: pageDescription,
    alternates: {
      canonical: 'https://www.yourwebsite.com/blog', // IMPORTANT: Change this URL
    },
    openGraph: {
      title: pageTitle,
      description: pageDescription,
      url: 'https://www.yourwebsite.com/blog', // IMPORTANT: Change this URL
      siteName: 'Your Site Name', // IMPORTANT: Change this
      type: 'website',
      images: [
        {
          url: 'https://www.yourwebsite.com/og-blog.jpg', // A default OG image for the blog page
          width: 1200,
          height: 630,
        },
      ],
    },
    // Add the JSON-LD to the head
    other: {
      'script[type="application/ld+json"]': JSON.stringify(jsonLd)
    },
  };
}


export default async function BlogPage() {
  const posts = await getAllPosts();

  return (
    // Use semantic HTML for better SEO
    <main className="bg-gray-50/50">
      <div className="container mx-auto px-4 sm:px-6 lg:px-8 py-16 md:py-24">
        <div className="text-left mb-12">
          <h1 className="text-base font-semibold text-blue-600 tracking-wide uppercase">Our Blog</h1>
          <p className="mt-2 text-4xl font-extrabold tracking-tight text-gray-900 sm:text-5xl">
            From the Blog
          </p>
          <p className="mt-4 max-w-2xl text-xl text-gray-500">
            Insights on productivity, marketing, and reaching your goals.
          </p>
        </div>

        {/* Responsive Grid Layout */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {posts.map((post) => (
            // Use <article> for blog post items for semantic meaning
            <article key={post._id} className="group flex flex-col rounded-xl border border-gray-200 bg-white shadow-sm hover:shadow-lg transition-shadow duration-300 overflow-hidden">
              <Link href={`/blog/${post.slug.current}`} className="block">
                {/* Optimized Next.js Image Component */}
                <div className="overflow-hidden">
                    <Image
                      src={urlFor(post.mainImage).width(800).height(450).url()}
                      alt={post.mainImage.alt || 'Blog post image'}
                      width={800}
                      height={450}
                      className="w-full h-52 object-cover group-hover:scale-105 transition-transform duration-300 ease-in-out"
                      priority={posts.indexOf(post) < 3} // Prioritize loading for the first 3 images
                    />
                </div>
              </Link>
              <div className="p-6 flex flex-col flex-grow">
                <Link href={`/blog/${post.slug.current}`} className="block">
                  <h2 className="text-xl font-bold text-gray-900 group-hover:text-blue-700 transition-colors duration-200">
                    {post.title}
                  </h2>
                  <p className="mt-3 text-gray-600 text-base leading-relaxed line-clamp-3">
                    {post.excerpt}
                  </p>
                </Link>

                {/* Author and Date Section - Pushed to the bottom */}
                <div className="mt-6 pt-4 border-t border-gray-100 flex items-center space-x-3">
                  {post.author?.image && (
                     <Image
                        src={urlFor(post.author.image).width(80).height(80).url()}
                        alt={post.author.name || 'Author image'}
                        width={40}
                        height={40}
                        className="rounded-full object-cover"
                      />
                  )}
                  <div>
                    <p className="text-sm font-semibold text-gray-800">{post.author?.name || 'Staff Writer'}</p>
                    <p className="text-sm text-gray-500">
                      <time dateTime={post.publishedAt}>
                        {new Date(post.publishedAt).toLocaleDateString('en-US', {
                          year: 'numeric',
                          month: 'long',
                          day: 'numeric',
                        })}
                      </time>
                    </p>
                  </div>
                </div>
              </div>
            </article>
          ))}
        </div>
      </div>
    </main>
  );
}